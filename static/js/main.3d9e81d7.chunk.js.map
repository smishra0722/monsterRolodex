{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","key","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","e","this","setState","target","value","fetch","then","response","json","filteredMonster","filter","toLowerCase","includes","toLocaleLowerCase","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAGaA,G,kBAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,UAHeP,EAAMI,QAAQI,OCD9CC,EAAW,SAACT,GACrB,OAAO,qBAAKC,UAAU,YAAf,SAA4BD,EAAMU,SAASC,KAAI,SAAAP,GAAO,OAAI,cAAC,EAAD,CAAMA,QAASA,UCFvEQ,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OAAQ,uBAAOb,UAAU,SAASc,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCoCzEG,E,kDAlCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAGf,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBARR,E,yDAWDC,GACXC,KAAKC,SAAS,CAACJ,YAAaE,EAAEG,OAAOC,U,0CAElB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKN,SAAS,CAACb,SAAUmB,S,+BAE/B,IAAD,EAC2BP,KAAKJ,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZW,EAAkBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAIA,EAAQE,KAAK0B,cAAcC,SAASd,EAAYe,wBACnG,OACE,sBAAKjC,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CAAWY,YAAY,kBAAkBC,aAAcQ,KAAKR,eAC1D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA3BVK,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3d9e81d7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div className='card-container' key={props.monster.key}> \r\n            <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = (props) => {\r\n    return <div className='card-list'>{props.monsters.map(monster => <Card monster={monster}></Card>)}</div>\r\n}\r\n// <h1 key={monster.id}>{monster.name}</h1>","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return (<input className='search' type='search' placeholder={placeholder} onChange={handleChange} />);\r\n}","import React from 'react';\nimport './App.css';\n\nimport {CardList} from './components/card-list/card-list.component.jsx';\nimport {SearchBox} from './components/search-box/search-box.component.jsx';\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({searchField: e.target.value});\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(json => this.setState({monsters: json}));\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonster = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n    return (\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox placeholder='Search Monsters' handleChange={this.handleChange}></SearchBox>\n        <CardList monsters={filteredMonster}></CardList>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}